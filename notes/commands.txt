TODO: Turn this into Markdown, update because we're now using Postgresapp.

To make psycopg2 use OpenSSL 1.0.0:

export DYLD_LIBRARY_PATH=/usr/local/Cellar/openssl/1.0.1c/lib

To dump database for Heroku:

pg_dump --host localhost --port 5432 --username "gameconfs" -Fc --no-acl --no-owner --verbose --file "/Users/jhorneman/Desktop/data.dump" "gameconfs"

To import data dump into Heroku database:

heroku pg:backups restore 'http://www.intelligent-artifice.com/data.dump' DATABASE -a gameconfs --confirm gameconfs

To grab database backup from live server on Heroku:

heroku pg:backups capture && curl -o latest.dump `heroku pg:backups public-url`

(Source: https://devcenter.heroku.com/articles/heroku-postgres-backups)

To import Heroku database backup into local Postgres:

pg_restore --verbose --clean --no-acl --no-owner --host localhost --port 5432 --username "gameconfs" --dbname "gameconfs" latest.dump

(The user is important! See: http://www.softr.li/blog/2012/07/25/postgresql-schema-owner-altered-during-dump-prevent-access-from-rails)

To create database:

CREATE USER "gdcal-dev" WITH PASSWORD "<password>";
CREATE DATABASE "gdcal-dev";
GRANT ALL PRIVILEGES ON DATABASE "gdcal-dev" to "gdcal-dev";

To list backups on Heroku:

heroku pgbackups

(See also: https://devcenter.heroku.com/articles/pgbackups)

To upload to Heroku:

git push heroku master

To stop Python output from being buffered:

1. Use the -u command line switch
2. Wrap sys.stdout in an object that flushes after every write
3. Set PYTHONUNBUFFERED env var
4. sys.stdout = os.fdopen(sys.stdout.fileno(), 'w', 0)

See:
    http://stackoverflow.com/questions/107705/python-output-buffering
    http://algorithmicallyrandom.blogspot.fr/2009/10/python-tips-and-tricks-flushing-stdout.html
    http://stackoverflow.com/questions/107705/python-output-buffering

Memcached (installed using Homebrew):

To have launchd start memcached at login:
    ln -sfv /usr/local/opt/memcached/*.plist ~/Library/LaunchAgents
Then to load memcached now:
    launchctl load ~/Library/LaunchAgents/homebrew.mxcl.memcached.plist
Or, if you don't want/need launchctl, you can just run:
    /usr/local/opt/memcached/bin/memcached

-d to daemonize

To get more debug output out of Gunicorn:

--debug --log-level debug

To view a deleted file in git:

git show $(git rev-list --max-count=1 --all -- { filename })^:{ filename }

# Grunt

grunt watch
